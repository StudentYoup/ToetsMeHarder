@page "/piano"
@using ToetsMeHarder.Business
@using ToetsMeHarder.Business.FallingBlocks
<div class="menu">
    <button class="KeyModeButton" @onclick="ChangeKeyModus"><b>Keymodus: <i>@_keyModus</i></b></button>
    <button class="midi"><b>MIDI: <i>
        @{
            if(midiName != null)
            {
                <text>VERBONDEN (@midiName)</text>
            }
            else
            {
                <text>VERBINDING VERBROKEN</text>
            }
        }
    </i></b></button>
</div>
<ul class="set">
    @{
        foreach ((KeyValue key, double frequency) in _noteFrequencies)
        {
            <li id="@key" @onpointerdown="() => PlayNote(key)" @onpointerup="() => StopNote(key)" @onpointerleave="() => StopNote(key)" class="@CreateCSSClass(key.ToString())">
				
                <b>
                    @if (_keyModus == KeyModus.Note)
                    {
                        <text>@GetKeyName(key).ToUpper()</text>
                    }
                    else if (_keyModus == KeyModus.Key)
                    {
                        <text>@_pianoKeys.FirstOrDefault(x => x.Value == key).Key.ToUpper()</text>
                    }
                </b>
            </li>
        }
    }
</ul>


<!--Click Simulation-->
<script>
    window.setKeyActive = (id) => {
        const el = document.getElementById(id);
        if (el) {
            el.classList.add("manual-active");
        }
    };

    window.setKeyInactive = (id) => {
        const el = document.getElementById(id);
        if (el) {
            el.classList.remove("manual-active");
        }
    };
</script>
